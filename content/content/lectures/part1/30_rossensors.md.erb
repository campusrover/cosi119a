---
title: Using ROS Sensors
desc: How do we use sensor data to actually do something useful?
homework: 1) Answer posed questions; 
cat: fundamentals
---
<%= homework_hdr %>

1. <%= pdfbadge %> I want you to use your intuition and your knowledge of geometry. Try to understand the data that comes from the LIDAR. You can think of them as "rays" that go in all directions. The data you get back is an array of distances to the first obstacle. Using words, diagrams and/or pseudo code, try and answer:
    * Think: Given these sensors how would you detect that you are about the crash into a wall?
    * Think: How would you compute the angle at which you are approaching the wall?
    <% deliverable "Submit your response as a pdf" %>
2. Read: [Wall Following Algorithms Paper](https://github.com/ssscassio/ros-wall-follower-2-wheeled-robot/blob/master/report/Wall-following-algorithm-for-reactive%20autonomous-mobile-robot-with-laser-scanner-sensor.pdf)

#### Discussion
* Lets talk over your answers to the homework questions.

#### Review How it works in ROS
* All your code (almost) in ROS is a node
* All information (almost) is transferred in the form of messages
* Sensors
  * Are electronic devices
  * Wired to the built in computer
  * In the case of the TB3, wired to the Arduino
  * Code on the Arduino read the i/o and participate as a node in ROS
  * Publishing information
* ROS info required
  * What is the "topic" that the device publishes to
  * How frequently does it publish (e.g. 10 times per second, once every second)
  * And what is the message type
* Acting on the sensor data
  * A node subscribes to that topic
  * Writes a "handler" which is invoked each time the sensor node publishes

#### Example - Simple "Roomba" pattern

Roomba is iRobot's robotic vacuum cleaner. It seems to just drive forward until it gets to a wall and then turn some amount and then continue. We want to think through a simplistic version of this pattern.

##### Design
* Loop forever
    * While there a wall ahead
        * Rotate in place
    * Move forward until there's a wall ahead 

##### Discussion about this approach
* What questions need to be answered?
* Wil it work?

##### Lets look at some code
`prrexamples/pid_driver4.py`
`prrexamples/pid_range.py`

#### Next Class
* Look at homework: <%= link_to_next_lecture %>